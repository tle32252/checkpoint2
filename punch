#!/usr/bin/env python
import sys
from tornado.httpclient import AsyncHTTPClient
from tornado.httpclient import HTTPRequest
from tornado.ioloop import IOLoop
import collections


name = {'P2Tag: ':"u5680913_u5781147","Connection: ": "keep-alive"}
dictt = collections.Counter()


if __name__ == '__main__':
    url = sys.argv[-1]
    concurrent = int(sys.argv[4])
    norequest = int(sys.argv[2])
    i = norequest
    
def handle_request(response):
    global dictt
    global i
    i -= 1
    if i == 0:
        IOLoop.instance().stop()
    dictt.update({str(response.code):1})


http_client = AsyncHTTPClient(None, max_clients=concurrent)
request = HTTPRequest(url,method="GET",headers=name,request_timeout=float(120))
for j in xrange(norequest):
    http_client.fetch(request, handle_request)


IOLoop.instance().start()

print "Completed requests: " + str(dictt["200"])
print "Failed requests: " + str(norequest - dictt["200"])
print "Total Request = " +str(norequest)
